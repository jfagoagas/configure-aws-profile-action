name: Configure AWS Profile

description: Configures an OIDC AWS Role Session as an aws config profile.

branding:
  icon: 'cloud'
  color: 'orange'

inputs:
  role-arn:
    required: true
    description: 'ARN of the role to assume.'
  profile-name:
    required: true
    description: 'Name of profile to be created.'
  region:
    required: false
    description: 'Name of AWS region to be used.'
    default: 'us-west-2'
  session-name:
    required: false
    description: 'Name of the AWS assumed role session.'
    default: 'assume-role-from-gha'

runs:
  using: "composite"
  steps:
  - name: Configure AWS Credentials
    uses: aws-actions/configure-aws-credentials@v4
    with:
      role-to-assume: ${{ inputs.role-arn }}
      aws-region: ${{ inputs.region }}
      mask-aws-account-id: 'no'
      role-session-name: ${{ inputs.session-name }}

  - name: Setup Profile
    shell: bash
    run: |
      aws configure set region ${{ inputs.region }} --profile ${{ inputs.profile-name }}
      aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile ${{ inputs.profile-name }}
      aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile ${{ inputs.profile-name }}
      aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile ${{ inputs.profile-name }}

  - name: Reset AWS Environment Variables
    shell: bash
    run: |
      echo "AWS_ACCESS_KEY_ID=" >> $GITHUB_ENV
      echo "AWS_SECRET_ACCESS_KEY=" >> $GITHUB_ENV
      echo "AWS_SESSION_TOKEN=" >> $GITHUB_ENV

  - name: Check Profile
    shell: bash
    run: aws sts get-caller-identity --profile ${{ inputs.profile-name }}
